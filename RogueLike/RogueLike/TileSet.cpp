#include "TileSet.h"

///////////////////////////////////////////////////////////////////////////////////////////////
// Initialises Global Variables
///////////////////////////////////////////////////////////////////////////////////////////////

TileSet::TileSet(int startNTiles)
{
	nTiles = startNTiles;

	tileArray = gcnew array<Tile^>(nTiles);
}
//End Constructor


///////////////////////////////////////////////////////////////////////////////////////////////
// Retrieves and returns a Bitmap of a tile from the array of Tiles,
// using the integer method parameter, as the the array index.
///////////////////////////////////////////////////////////////////////////////////////////////

Bitmap^ TileSet::GetTileBitmap(int tileIndex)
{
	return tileArray[tileIndex]->TileBitmap;

}//End GetTileBitmap


///////////////////////////////////////////////////////////////////////////////////////////////
// Retrieves and returns the walkable state of a tile from the array of Tiles,
// using the integer parameter of the method, as the the array index.
///////////////////////////////////////////////////////////////////////////////////////////////

bool TileSet::GetTileWalkableState(int tileIndex)
{
	return tileArray[tileIndex]->IsWalkable;
}//End GetTileWalkableState


///////////////////////////////////////////////////////////////////////////////////////////////
// Creates a new Tile using the string and boolean parameters of the method.
// Places the new Tile inside the array of Tiles,
// using the integer parameter of the method, as the the array index.
///////////////////////////////////////////////////////////////////////////////////////////////

void TileSet::SetTileArrayEntry(int tileIndex, String^ fileName, bool isWalkable)
{
	Tile^ tileToEnter = gcnew Tile(fileName, isWalkable);
	tileArray[tileIndex] = tileToEnter;

}//End SetTileArrayEntry
