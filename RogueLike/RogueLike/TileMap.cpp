#include "TileMap.h"

TileMap::TileMap(TileSet^ startTileSet, int startNRows, int startNCols)
{
	//Initialising fields
	tileSet = startTileSet;
	NRows = startNRows;
	NCols = startNCols;
	tileMap = gcnew array<int, 2>(NRows, NCols);
	VisibleMap = gcnew array<bool, 2>(NRows, NCols);

}//End Constructor


 ///////////////////////////////////////////////////////////////////////////////////////////////
 // Sets the specified tileIndex at the corresponding coordinates passed into the method parameter
 ///////////////////////////////////////////////////////////////////////////////////////////////

void TileMap::SetMapEntry(int row, int col, int tileIndex)
{
	tileMap[row, col] = tileIndex;
}


///////////////////////////////////////////////////////////////////////////////////////////////
// Gets the tileIndex that is stored at the corresponding coordinates passed into the method parameter
///////////////////////////////////////////////////////////////////////////////////////////////

int TileMap::GetMapEntry(int row, int col)
{
	return tileMap[row, col];
}


///////////////////////////////////////////////////////////////////////////////////////////////
// Gets the Bitmap that is stored at the corresponding coordinates passed into the method parameter
///////////////////////////////////////////////////////////////////////////////////////////////

Bitmap ^ TileMap::GetTileBitmap(int row, int col)
{
	int mapValue = tileMap[row, col];
	return tileSet->GetTileBitmap(mapValue);
}


///////////////////////////////////////////////////////////////////////////////////////////////
// Gets the true or false value that is stored at the corresponding coordinates passed into the method parameter
///////////////////////////////////////////////////////////////////////////////////////////////

bool TileMap::GetWalkableState(int row, int col)
{
	int mapValue = tileMap[row, col];
	return tileSet->GetTileWalkableState(mapValue);
}

///////////////////////////////////////////////////////////////////////////////////////////////
// Sets the 2Darray of integers held by this class to the 2Darray of integers passed into the method parameter
///////////////////////////////////////////////////////////////////////////////////////////////

void TileMap::SetTileMap(array<int, 2>^ newMap)
{
	tileMap = newMap;
}


///////////////////////////////////////////////////////////////////////////////////////////////
// Resets the 2Darray of boolean all back to false in preparation for a new level being created
///////////////////////////////////////////////////////////////////////////////////////////////

void TileMap::ResetFog()
{
	for (int r = 0; r < NRows; r++)
	{
		for (int c = 0; c < NCols; c++)
		{
			VisibleMap[r, c] = false;
		}
	}
}


